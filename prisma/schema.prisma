// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                     Int                  @id @default(autoincrement())
  createdAt              DateTime             @default(now())
  username               String               @unique
  name                   String
  keyPackage             Json                 @db.Json
  MessageConsumption     MessageConsumption[]
  CreatedUserMessage     Message[]            @relation("createdUser")
  DestinationUserMessage Message[]            @relation("destinationUser")
}

enum MessageType {
  ApplicationMessage
  WelcomeMessage
}

model Message {
  id                 Int                  @id @default(autoincrement())
  createdAt          DateTime             @default(now())
  createdUser        User                 @relation("createdUser", fields: [userId], references: [id])
  userId             Int
  messageType        MessageType
  payload            Json                 @db.Json
  groupId            String
  MessageConsumption MessageConsumption[]
  destinationUser    User?                @relation("destinationUser", fields: [destinationUserId], references: [id]) // if it's a welcome, it should only be devliered to a specific user
  destinationUserId  Int?
}

model MessageConsumption {
  id        Int     @id @default(autoincrement())
  message   Message @relation(fields: [messageId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  messageId Int
  userId    Int
}
